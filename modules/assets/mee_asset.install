<?php

/**
 * @file
 * Sets up the base table for our entity and a table to store information about
 * the entity types.
 */


function mee_asset_install() {
  // Create image bundle
  if(mee_asset_install_bundle('image', 'Image', 'photo', 'Image - Ctrl+G', 'ctrl+g')){
    mee_asset_install_bundle_image_fields();
  }

  // Create image style
  mee_asset_install_image_style();

  return array();
}


/**
 * Create an asset category taxonomy and taxonomy reference field.
 */
function mee_asset_update_7001() {
  taxonomy_vocabulary_save((object) array(
    'name' => 'Asset Category',
    'machine_name' => 'asset_category',
  ));

  mee_asset_install_bundle_category_fields();

  return array();
}


function mee_asset_uninstall() {
  $instance = field_info_instance('mee_asset', 'field_asset_image', 'image');
  field_delete_instance($instance);

  // Delete image styles
  image_style_delete(image_style_load('asset-thumb'));
  image_style_delete(image_style_load('asset-full'));
}

/**
 * Create a bundle
 */
function mee_asset_install_bundle($type, $label, $icon, $tip = NULL, $shortcut = NULL){
  $bundles = field_info_bundles('mee_asset');
  if (empty($bundles[$type])) {
    $controller = new MeeAssetTypeController('mee_asset_type');
    $params = array();
    $params['type'] = $type;
    $params['label'] = t($label);
    $params['data']['icon'] = $icon;
    $params['data']['tip'] = $tip;
    $params['data']['shortcut'] = $shortcut;
    $params['data']['instances']['image_style']['image_styles']['thumbnail']['enabled'] = 1;
    $params['data']['instances']['image_style']['image_styles']['thumbnail']['label'] = 'Thumbnail';
    $params['data']['instances']['image_style']['image_styles']['medium']['enabled'] = 1;
    $params['data']['instances']['image_style']['image_styles']['medium']['label'] = 'Medium';
    $params['data']['instances']['image_style']['image_styles']['large']['enabled'] = 1;
    $params['data']['instances']['image_style']['image_styles']['large']['label'] = 'Large';
    $params['data']['instances']['position'] = 1;
    $params['data']['instances']['preview'] = 1;
    $bundle = $controller->create($params);
    $controller->save($bundle);
    return TRUE;
  }
  return FALSE;
}

/**
 * Create image style
 */
function mee_asset_install_image_style(){
  if(!image_style_load('asset-thumb')){
    $style = image_style_save(array('name' => 'asset-thumb'));
    $effect = array(
      'name' => 'image_scale_and_crop',
      'data' => array(
        'width' => 170,
        'height' => 100,
      ),
      'isid' => $style['isid'],
    );
    image_effect_save($effect);
  }
  if(!image_style_load('asset-full')){
    $style = image_style_save(array('name' => 'asset-full'));
    $effect = array(
      'name' => 'image_scale',
      'data' => array(
        'width' => 770,
        'height' => '',
        'upscale' => TRUE,
      ),
      'isid' => $style['isid'],
    );
    image_effect_save($effect);
  }
}


/**
 * Implements hook_schema().
 */
function mee_asset_schema() {
  $schema = array();

  $schema['mee_asset'] = array(
    'description' => 'The base table for mee asset entities.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key: Identifier for a mee asset.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => 'The {mee_asset_type}.type of this mee asset.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'language' => array(
        'description' => 'The language of the mee asset.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
      'name' => array(
        'description' => 'The name of the mee asset - a human-readable identifier.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the mee asset was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the mee asset was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'data' => array(
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data.',
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'type' => array('type'),
    ),
  );

  $schema['mee_asset_type'] = array(
    'description' => 'Stores information about defined mee asset types.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique mee asset type identifier.',
      ),
      'type' => array(
        'description' => 'The machine-readable name of this mee asset type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'label' => array(
        'description' => 'The human-readable name of this mee asset type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'weight' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
        'description' => 'The weight of this mee asset type in relation to others.',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data related to this mee asset type.',
      ),
    ) + entity_exportable_schema_fields(),
    'primary key' => array('id'),
    'unique keys' => array(
      'type' => array('type'),
    ),
  );

  $schema['mee_asset_instance'] = array(
    'description' => 'Instance settings for an asset.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique mee asset type identifier.',
      ),
      'data' => array(
        'type' => 'text',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of additional data related to this mee asset type.',
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['mee_asset_usage'] = array(
    'description' => 'Track where a Mee entity is used.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique mee asset type identifier.',
      ),
      'asset_id' => array(
        'description' => 'Mee asset ID.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'instance_id' => array(
        'description' => 'Mee asset instance ID.',
        'type' => 'int',
        'unsigned' => TRUE,
      ),
      'entity_id' => array(
        'description' => 'The entity ID the assed is used within.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'entity_type' => array(
        'description' => 'The {entity}.type of this entity.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => TRUE,
        'default' => '',
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'asset_id' => array('asset_id'),
      'instance_id' => array('instance_id'),
      'entity_id' => array('entity_id'),
      'entity_type' => array('entity_type'),
    ),
  );

  return $schema;
}

function mee_asset_install_bundle_image_fields(){
  $field = array(
    'translatable' => '0',
    'entity_types' => array() ,
    'settings' => array(
      'uri_scheme' => 'public',
      'default_image' => 0,
    ) ,
    'storage' => array(
      'type' => 'field_sql_storage',
      'settings' => array() ,
      'module' => 'field_sql_storage',
      'active' => '1',
      'details' => array(
        'sql' => array(
          'FIELD_LOAD_CURRENT' => array(
            'field_data_field_asset_image' => array(
              'fid' => 'field_asset_image_fid',
              'alt' => 'field_asset_image_alt',
              'title' => 'field_asset_image_title',
              'width' => 'field_asset_image_width',
              'height' => 'field_asset_image_height',
            ) ,
          ) ,
          'FIELD_LOAD_REVISION' => array(
            'field_revision_field_asset_image' => array(
              'fid' => 'field_asset_image_fid',
              'alt' => 'field_asset_image_alt',
              'title' => 'field_asset_image_title',
              'width' => 'field_asset_image_width',
              'height' => 'field_asset_image_height',
            ) ,
          ) ,
        ) ,
      ) ,
    ) ,
    'foreign keys' => array(
      'fid' => array(
        'table' => 'file_managed',
        'columns' => array(
          'fid' => 'fid',
        ) ,
      ) ,
    ) ,
    'indexes' => array(
      'fid' => array(
        0 => 'fid',
      ) ,
    ) ,
    'id' => '25',
    'field_permissions' => array(
      'type' => '0',
    ) ,
    'field_name' => 'field_asset_image',
    'type' => 'image',
    'module' => 'image',
    'active' => '1',
    'locked' => '0',
    'cardinality' => '1',
    'deleted' => '0',
    'columns' => array(
      'fid' => array(
        'description' => 'The {file_managed}.fid being referenced in this field.',
        'type' => 'int',
        'not null' => false,
        'unsigned' => true,
      ) ,
      'alt' => array(
        'description' => 'Alternative image text, for the image\'s \'alt\' attribute.',
        'type' => 'varchar',
        'length' => 512,
        'not null' => false,
      ) ,
      'title' => array(
        'description' => 'Image title text, for the image\'s \'title\' attribute.',
        'type' => 'varchar',
        'length' => 1024,
        'not null' => false,
      ) ,
      'width' => array(
        'description' => 'The width of the image in pixels.',
        'type' => 'int',
        'unsigned' => true,
      ) ,
      'height' => array(
        'description' => 'The height of the image in pixels.',
        'type' => 'int',
        'unsigned' => true,
      ) ,
    ) ,
    'bundles' => array(
      'mee_asset' => array(
        0 => 'image',
      ) ,
    ) ,
  );
  field_create_field($field);

  $instance = array(
    'label' => 'Image',
    'widget' => array(
      'weight' => '1',
      'type' => 'image_image',
      'module' => 'image',
      'active' => 1,
      'settings' => array(
        'progress_indicator' => 'throbber',
        'preview_image_style' => 'thumbnail',
        'maxlength_js_label' => 'Content limited to @limit characters, remaining: @remaining',
      ) ,
    ) ,
    'settings' => array(
      'file_directory' => '',
      'file_extensions' => 'png gif jpg jpeg',
      'max_filesize' => '',
      'max_resolution' => '',
      'min_resolution' => '',
      'alt_field' => 1,
      'title_field' => 0,
      'default_image' => 0,
      'filefield_paths_enabled' => 1,
      'filefield_paths' => array(
        'file_path' => array(
          'value' => 'assets/images',
          'options' => array(
            'pathauto' => 0,
            'transliterate' => 0,
          ) ,
        ) ,
        'retroactive_update' => 0,
        'active_updating' => 0,
        'file_name' => array(
          'value' => '[mee_asset:id]-[file:fid]-[mee_asset:name].[file:ffp-extension-original]',
          'options' => array(
            'pathauto' => 1,
            'transliterate' => 0,
          ) ,
        ) ,
      ) ,
      'focus' => 0,
      'focus_min_size' => '',
      'focus_lock_ratio' => 0,
      'user_register_form' => false,
    ) ,
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'image',
        'weight' => '0',
        'settings' => array(
          'image_style' => 'asset-full',
          'image_link' => '',
        ) ,
        'module' => 'image',
      ) ,
    ) ,
    'required' => 1,
    'description' => '',
    'id' => '57',
    'field_id' => '28',
    'field_name' => 'field_asset_image',
    'entity_type' => 'mee_asset',
    'bundle' => 'image',
    'deleted' => '0',
  );
  field_create_instance($instance);
}



function mee_asset_install_bundle_category_fields(){
  $field = array(
    'translatable' => '0',
    'entity_types' => array(
    ),
    'settings' => array(
      'allowed_values' => array(
        0 => array(
          'vocabulary' => 'asset_category',
          'parent' => '0',
        ),
      ),
    ),
    'storage' => array(
      'type' => 'field_sql_storage',
      'settings' => array(
      ),
      'module' => 'field_sql_storage',
      'active' => '1',
      'details' => array(
        'sql' => array(
          'FIELD_LOAD_CURRENT' => array(
            'field_data_field_asset_category' => array(
              'tid' => 'field_asset_category_tid',
            ),
          ),
          'FIELD_LOAD_REVISION' => array(
            'field_revision_field_asset_category' => array(
              'tid' => 'field_asset_category_tid',
            ),
          ),
        ),
      ),
    ),
    'foreign keys' => array(
      'tid' => array(
        'table' => 'taxonomy_term_data',
        'columns' => array(
          'tid' => 'tid',
        ),
      ),
    ),
    'indexes' => array(
      'tid' => array(
        0 => 'tid',
      ),
    ),
    'id' => '27',
    'field_permissions' => array(
      'type' => '0',
    ),
    'field_name' => 'field_asset_category',
    'type' => 'taxonomy_term_reference',
    'module' => 'taxonomy',
    'active' => '1',
    'locked' => '0',
    'cardinality' => '1',
    'deleted' => '0',
    'columns' => array(
      'tid' => array(
        'type' => 'int',
        'unsigned' => true,
        'not null' => false,
      ),
    ),
    'bundles' => array(
      'mee_asset' => array(
        0 => 'image',
      ),
    ),
  );
  field_create_field($field);

  $instance = array(
    'label' => 'Category',
    'widget' => array(
      'weight' => '2',
      'type' => 'options_select',
      'module' => 'options',
      'active' => 1,
      'settings' => array(
        'maxlength_js_label' => 'Content limited to @limit characters, remaining: @remaining',
      ),
    ),
    'settings' => array(
      'user_register_form' => false,
    ),
    'display' => array(
      'default' => array(
        'label' => 'above',
        'type' => 'taxonomy_term_reference_link',
        'settings' => array(
        ),
        'module' => 'taxonomy',
        'weight' => 1,
      ),
      'teaser' => array(
        'type' => 'hidden',
        'label' => 'above',
        'settings' => array(
        ),
        'weight' => 0,
      ),
      'tab' => array(
        'type' => 'hidden',
        'label' => 'above',
        'settings' => array(
        ),
        'weight' => 0,
      ),
      'callout' => array(
        'type' => 'hidden',
        'label' => 'above',
        'settings' => array(
        ),
        'weight' => 0,
      ),
    ),
    'required' => 0,
    'description' => '',
    'default_value' => NULL,
    'id' => '45',
    'field_id' => '27',
    'field_name' => 'field_asset_category',
    'entity_type' => 'mee_asset',
    'bundle' => 'image',
    'deleted' => '0',
  );
  field_create_instance($instance);
}
